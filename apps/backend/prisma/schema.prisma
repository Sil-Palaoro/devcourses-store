// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  surname   String
  email     String   @unique
  password  String
  role      Role     @default(student)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] @relation("InstructorCourses")
  cart      Cart?
}

enum Role {
  admin
  instructor
  student
}

model Category {
  id          String   @id @default(cuid())
  name        CategoryName  @unique
  description String
  courses     Course[]
}

enum CategoryName {
    Frontend
    Backend
    FullStack
    Databases
    DevOps 
    Testing
}

enum CourseLevel {
  beginner
  intermediate
  advanced
}

enum Tag {
  javascript
  python
  sql
}

model Course {
  id           String      @id @default(cuid())
  title        String
  description  String
  price        Float
  categoryId   String
  category     Category    @relation(fields: [categoryId], references: [id])
  courseLevel  CourseLevel
  published    Boolean     @default(false)
  instructor   User        @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId String
  tag          Tag
  cartItems    CartItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@index([categoryId])
}

model Cart {
  id        String     @id @default(cuid())
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id       String @id @default(cuid())
  cartId   String
  courseId String
  quantity Int    @default(1)
  cart     Cart   @relation(fields: [cartId], references: [id])
  course   Course @relation(fields: [courseId], references: [id])
}
